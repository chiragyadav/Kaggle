html_nodes('.itemprop') %>%
html_table()
html %>%
html_nodes('.itemprop') %>%
html_text()%>%
as.array()
arr <- html %>%
html_nodes('.itemprop') %>%
html_text() %>%
as.array()
dim(arr)
rownames(arr)
colnames(arr)
arr
head(arr)
library('swirl')
rm(list = ls())
library('swirl')
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
quit()
help('<<-')
install.packages('deplyr')
install.packages('dplyr')
library(dplyr)
library('dplyr')
library("XML", lib.loc="~/R/win-library/3.2")
detach("package:XML", unload=TRUE)
install.packages('nycflights13')
library(nycflights13)
x <- flights
head(x)
dim(flights)
filter(x,month==1, day =1)
filter(x,month==1, day==1)
dim(filter(x,month==1, day==1))
y <- filter(x,month==1, day==1)
y
y <- filter(x, month==1)
y
lapply(split(x, x$day), function(x) ncol(x))
sapply(split(x, x$day), function(x) ncol(x))
sapply(split(y, y$day), function(x) ncol(x))
sapply(split(y, y$day), function(x) nrow(x))
lapply(split(x, x$day), function(x) nrow(x))
x.daily <-lapply(split(x, x$day), function(x) nrow(x))
sum(x.daily)
x.daily <-sapply(split(x, x$day), function(x) nrow(x))
sum(x.daily)
(x.daily/33676) *100
x.daily<-(x.daily/336776) *100
x.daily
sum(x.daily)
x
?slice
slice(filter(x, month==12), nrow(filter(x, month ==2) :nrow(filter(x, month ==2)-2 ))
slice(filter(x, month==12), nrow(filter(x, month ==2) :nrow(filter(x, month ==2)-2 ))
slice(filter(x, month==12), nrow(filter(x, month ==2) :nrow(filter(x, month ==2)-2 ))
slice(filter(x, month==12), nrow(filter(x, month ==2) :nrow(filter(x, month ==2)-2 ))
slice(filter(x, month==12), nrow(filter(x, month ==2) :30)
mean(1:3)
slice(filter(x, month==12), nrow(filter(x, month ==2) :30)
)
slice(filter(x, month==12), nrow(filter(x, month ==2)) :30)
dec <- filter(x, month==12)
dim(dec)
slice(dec, 28135:28133)
max.print
print.tbl_df <- print.data.frame()
print.tbl_df <- print.data.frame
dec
head(dec)
print.tbl_df <- print.tbl_df
head(dec)
tbl_df(dec)
head(dec)
ls()
library(dplyr)
library(nycflights13)
x < flights
x <- flights
x
slice(x, 1:10)
dplyr.print_max
options()
options(dplyr.print_max )
filter(x, month !=1)
arrange(x, desc(air_time))
arrange(x, , air_time,desc(air_time))
arrange(x, air_time,desc(air_time))
arrange(x,desc(air_time))%.% as.data.frame()
arrange(flights, dep_time)
colnames(flights)
select(flights, flight, origin, dest)
x
rename(x,dep_delay = 'dep_delay in min')
rename(x,dep_delay = dep_delay in min)
rename(x,dep_delay = dep_delay_inmin)
rename(x, dep_delay_inmin=dep_delay)
length(distinct(select(flights, month)))
distincts(select(flights, month))
distinct(select(flights, month))
dim(distinct(select(flights, month)))
mutate(x, month_10 = month*10)
transmute(x, month_10 = month*10)
distinct(transmute(x, month_10 = month*10))
?group_by()
group_by(x, month)
lapply(group_by(x, month), function(x) max(x$air_time))
lapply(group_by(x, month), function(x) max(x[,'air_time']))
lapply(group_by(x, month), function(x) max(x))
class(group_by(x, month))
sapply(split(x, x$month), max(x[,"air_time"]))
sapply(split(x, x$month), function(y) max(select(y, month)))
sapply(split(x, x$month), function(y) max(select(y, airtime)))
sapply(split(x, x$month), function(y) max(select(y, air_time)))
sapply(split(x, x$month), function(y) max(select(y, air_time), na.rm = TRUE))
range(x$air_time)
range(x$air_time, na.rm = TRUE)
avg_dist_month <- sapply( split(x$distance, x$month), mean, na.rm = TRUE )
avg_dist_month
as.data.frame(avg_dist_month)
df <-as.data.frame(avg_dist_month)
dim(df)
barplot(df)
barplot(avg_dist_month)
?barplot
names(avg_dist_month)
date()
time()
time(34)
z <- vector()
z
z <- vector()
z
?"<<-"
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector()
v <-makeVector()
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(c(1:10))
v <- makeVector(c(1:10))
cachemean(v)
cachemean(v)
cachemean(v)
matrix()
makeVector <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinverse <- function(inverse) inv <<- inverse
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
cachemean <- function(x, ...) {
inv <- x$getinverse()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data,...)
x$setmean(inv)
inv
}
mat <- matrix(c(1:4), nrow = 2, ncol=2)
makeVector(mat)
vec <- makeVector(mat)
cachemean(vec)
makeVector <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinverse <- function(inverse) inv <<- inverse
getinverse <- function() inv
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
cachemean <- function(x, ...) {
inv <- x$getinverse()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data,...)
x$setmean(inv)
inv
}
mat <- matrix(c(1:4), nrow = 2, ncol=2)
vec <- makeVector(mat)
cachemean(vec)
vec
cachemean <- function(x, ...) {
inv <- x$getinverse()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data)
x$setmean(inv)
inv
}
cachemean(vec)
vec$get()
vec$set()
cachemean <- function(x, ...) {
inv <- x$getinverse()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data)
x$setinverse(inv)
inv
}
cachemean(vec)
mat <- matrix(c(1:10000), nrow= 100, rcol=100)
mat <- matrix(c(1:10000), nrow= 100, ncol=100)
vec <- makeVector(mat)
cachemean(vec)
mat
cachemean(vec)
mat <- matrix(rnorm(1000) , nrow= 100, ncol=100)
makeVector(mat)
vec <- makeVector(mat)
cachemean(vec)
det(mat)
mat <- matrix(c(1:100), nrow=10, ncol=10)
vec <- makeVector(mat)
cachemean(vec)
det(mat)
mat <- matrix(c(1:9), nrow= 3, ncol=3)
det(mat)
mat <- matrix(c(1:4), nrow= 2, ncol=2)
x <- mtcars
x
group_by(x,cyl)
summarise(group_by(x,cyl), mpg = mean(mpg))
grp<- group_by(x, cyl)
slice(grp, 1:2)
ls ()
rm(list = ls())
library(nycflights13)
x < flights
x <- flights
x
x.grp.plane <- group_by(x, tailnum)
summarise(x.grp.plane, distance = sum(distance, na.rm = TRUE), arr_delay = mean(arr_delay, na.rm = TRUE), air_time= mean(air_time, na.rm = TRUE))
sum <-summarise(x.grp.plane, distance = sum(distance, na.rm = TRUE), arr_delay = mean(arr_delay, na.rm = TRUE), air_time= mean(air_time, na.rm = TRUE))
cor(sum$arr_delay, sum$air_time)
n()
?n
cor(sum$arr_delay, sum$air_time, na.rm =TRUE)
cor(sum$arr_delay, sum$air_time, use = 'complete')
plot(sum$distance, sum$arr_delay)
plot(sum$air_time, sum$arr_delay)
x
summarise(group_by(x,dest)), flights = n_distinct(tailnum), total = n())
summarise(group_by(x,dest), flights = n_distinct(tailnum), total = n())
summarise(group_by(x, year,month), total= n())
sum <- summarise(group_by(x, year,month), total= n())
barplot(sum$total, names.arg = sum$month)
barplot(sum$total, names.arg = sum$month, xlab = 'months', ylab = 'total number of flights')
x
filter(x, tailnum = 'N14228')
filter(x, tailnum == 'N14228')
flight_N14228 <- filter(x, tailnum == 'N14228')
flight_N14228
group_by(flight_N14228,month,day)
group_by(flight_N14228,month,day) %>%
summary( total = n())
group_by(flight_N14228,month,day) %>%
summarise(total = n())
group_by(flight_N14228,month,day) %>%
+ summarise(total = n()) %>%
n_distinct(days)
group_by(flight_N14228,month,day) %>%
+ summarise(total = n()) %>%
%>%
group_by(flight_N14228,month,day) %>%
+ summarise(total = n())
group_by(flight_N14228, day) %>%
summarise(count = n())
group_by(flight_N14228, day) %>%
summarise(count = n())%>%
as.data.frame()
df <- group_by(flight_N14228, day) %>%
summarise(count = n())%>%
as.data.frame()
sum(df$count)
library(rvest)
url <- html('http://www.visitithaca.com/attractions/wineries.html')
brewries <- html_nodes(url,'.indSearchListingTitle a') %>%
html_text()
brewries
adresses<- html_nodes(url,'.indMetaWrapper:nth-child(1) .indMetaInfoWrapper')%>%
html_text()
adresses
?gsub
gsub
gsub("\n",'',adresses)
gsub(c(\n, '',  ),'',adresses)
gsub('"','',adresses)
gsub('\\t','',adresses)
gsub('\\n','',adresses)
gsub('\\s','',adresses)
adresses<-gsub('\\n','',adresses)
adresses<-gsub('ontheCayugalLakeWineTrail','',adresses, ignore.case = TRUE)
adressess
adresses
adresses<-gsub('\\s','',adresses)
adresses<-gsub('ontheCayugalLakeWineTrail','',adresses, ignore.case = TRUE)
adresses
adresses<-gsub('ontheCayugaLakeWineTrail','',adresses, ignore.case = TRUE)
adresses
adresses<-gsub('\\W','',adresses, ignore.case = TRUE)
adresses
s <- c('chirag', 'dinesh','karan')
sapply(s, paste,sep = "bb")
sapply(s, function(x) x + 'a')
sapply(s, function(x) paste(x,'a',sep = '_'))
rm
rm(list = ls())
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinverse <- function(inverse) inv <<- inverse
getinverse <- function() inv
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
cacheSolve <- function(x, ...) {
inv <- x$getinverse()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data)
x$setinverse(inv)
inv
}
makeCacheMatrix(matrix(c(1:4), nrow = 2, ncol = 2))
mat <- makeCacheMatrix(matrix(c(1:4), nrow = 2, ncol = 2))
cacheSolve(mat)
cacheSolve(mat)
close()
x <- c(7921, 5184,8836,4761)
range(x)
x <- x/(8836-4761)
x
summary(x)
x <- (x- 1.638)/(2.168-1.168)
x
who
ls
ls()
rm(x)
ls()
?quantile
?cut
install.packages('ggplot2')
library('ggplot2')
library('datasets')
mtcars
ggplot(mtcars,aes(x = factor(mtcars$cyl), y = mpg))
ggplot(mtcars,aes(x = factor(mtcars$cyl), y = mpg)) + geom_point()
ggplot(mtcars,aes(x = factor(mtcars$cyl), y = mpg, col = disp)) + geom_point()
ggplot(mtcars,aes(x = factor(mtcars$cyl), y = mpg, col = disp, size=disp)) + geom_point()
ggplot(mtcars,aes(x = wt, y = mpg, col = disp, size=disp)) + geom_point()
iris
diamonds
cor(diamonds$carat,diamonds$price, na.rm= TRUE)
cor(diamonds$carat,diamonds$price)
x <- diamonds
ggplot(x, aes(x = x$carat, y= x$price))+ geom_point()
y <- diamonds
z <- diamonds
ggplot(x, aes(x = z$carat, y= z$price))+ geom_point()
data <- diamonds
rm(list = ls())
dat <- diamonds
ggplot(dat, aes(x=dat$carat, y=dat$price)) + geom_point()
dat <- dat[1:1000,]
ggplot(dat, aes(x=dat$carat, y=dat$price)) + geom_point()
dat
dat <- diamonds
ggplot(dat, aes(x=dat$carat, y=dat$price)) + geom_point()
str(dat)
ggplot(dat, aes(x=dat$carat, y=dat$price)) + geom_point() + geom_smooth()
str(dat)
dat <- mtcars
as.list(as.factor(dat$cyl))
dat$cyl <- as.factor(dat$cyl)
lapply(dat$cyl, function(x){print(x)})
ggplot(mtcars, aes(x = wt, y = mpg, col = cyl)) + geom_point()
ggplot(dat, aes(x = wt, y = mpg, col = cyl)) + geom_point()
cor(dat$cyl,dat$wt)
barplot(dat$cyl)
ggplot(mtcars, aes(x = wt, y = mpg, col = cyl)) + geom_point()+ geom_smooth(method='lm', se=FALSE)
ggplot(mtcars, aes(x = wt, y = mpg, col = cyl)) + geom_point()+ geom_smooth(method='lm', se=TRUE)
ggplot(mtcars, aes(x = wt, y = mpg, col = cyl)) + geom_point()+ geom_smooth(method='lm')
ggplot(mtcars, aes(x = wt, y = mpg, col = cyl)) + geom_point()+ geom_smooth(method='glm')
ggplot(data = , aes(x = wt, y = mpg, col = cyl)) + geom_point()+ geom_smooth(method='lm', se= FALSE)
ggplot(dat , aes(x = wt, y = mpg, col = cyl)) + geom_point()+ geom_smooth(method='lm', se= FALSE)
ggplot(dat , aes(x = wt, y = mpg, col = cyl)) + geom_point()+ geom_smooth( se= FALSE)
ggplot(dat , aes(x = wt, y = mpg)) + geom_point()+ geom_smooth( se= FALSE)
dat <- iris
head(dat)
ggplot(dat, aes(x= Species, y= Petal.Width))
ggplot(dat, aes(x= Species, y= Petal.Width)) + geom_point()
ggplot(dat, aes(x= Species, y= Petal.Width, col = Species) + geom_point()
ggplot(dat, aes(x= Species, y= Petal.Width, col = Species)) + geom_point()
class(dat$Species)
ggplot(dat, aes(x= Species, y= Petal.Width, col = Species)) + geom_jitter()
ggplot(dat, aes(x= Species, y= Petal.Length, col = Species)) + geom_jitter() + facet_grid(.~Petal.Width)
ggplot(dat, aes(x= Species, y= Petal.Length, col = Species)) + geom_jitter() + facet_grid(Petal.Width)
ggplot(dat, aes(x= Species, y= Petal.Length, col = Species)) + geom_jitter() + facet_grid(.~Petal.Width)
install.packages('tidyr')
library('tidyr')
library(dplyr)
df <- data_frame(
group = c(1:2, 1),
item_id = c(1:2, 2),
item_name = c("a", "b", "b"),
value1 = 1:3,
value2 = 4:6
)
df %>% complete(group, nesting(item_id, item_name))
getwd()
?sample
?crossprod
crossprod(2:3)
crossprod(1:4)
clc
download.file("http://www.greenmountaindiapers.com/skin/common_files/modules/Socialize/images/twitter.png",destfile = "twitter.png")
download.file("http://static4.jassets.com/p/Aks-Yellow-Lace-Anarkali-3496-737769-1-pdp_slider_xs.jpg",destfile = "twitter.png")
getwd()
setwd('C:/Users/chirag/Desktop/Kaggle/Face Key Point Recognition')
download.file("http://static4.jassets.com/p/Aks-Yellow-Lace-Anarkali-3496-737769-1-pdp_slider_xs.jpg",destfile = "twitter.png")
download.file("http://static4.jassets.com/p/Aks-Yellow-Lace-Anarkali-3496-737769-1-pdp_slider_xs.jpg",destfile = "twitter.jpg")
download.file("http://static4.jassets.com/p/Aks-Yellow-Lace-Anarkali-3496-737769-1-pdp_slider_xs.jpg",destfile = "twitter.jpg")
library("png")
library("colorspace")
x <- readPNG("twitter.png")
install.packages(jpeg)
